# For TOML reference
# https://learnxinyminutes.com/docs/toml/

<<requires::testing
[tool.pytest.ini_options]
testpaths = ["tests"]             # path to the test directory
minversion = "3.8"
addopts = "--cov=<<package-name>>" # Should be package name

[tool.coverage.run]
branch = true
context = "<<package-name>>" # Should be package name
omit = [
    "<<package-name>>/__init__.py", # Has variables only needed for setup.py
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    '\.\.\.',
    "raise NotImplementedError",
    "if TYPE_CHECKING",
] # These are lines to exclude from coverage
endrequires::testing>>

<<requires::black
[tool.black]
target-version = ['py38']
line-length = 120
endrequires::black>>

<<requires::isort
[tool.isort]
py_version = "38"
<<requires::black profile = "black" # Play nicely with black endrequires::black>>
src_paths = ["<<package-name>>", "tests"]
known_types = ["typing", "abc"] # We put these in their own section "types"
known_test = ["tests"]
known_first_party = ["<<package-name>>"]
sections = [
    "FUTURE",
    "TYPES",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "TEST",
    "LOCALFOLDER",
] # section ordering
multi_line_output = 3 # https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html
endrequires::isort>>

<<requires::pydocstyle
[tool.pydocstyle]
convention = "numpy"
add-ignore = [ # http://www.pydocstyle.org/en/stable/error_codes.html
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D203", # 1 blank line required before class docstring
    "D205", # 1 blank line required between summary and description
    "D210", # No whitespaces allowed surrounding docstring text
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D400", # First line should end with a period
    "D401", # First line should be in imperative mood
    "D404", # First word of docstring should not be this
    "D413", # Missing blank line after last section
    "D415", # First line should end with a period, question mark, or exclamation point
]
endrequires::pydocstyle>>

<<requires::mypy
[tool.mypy]
python_version = "3.8"
show_error_codes = true
warn_unused_configs = true         # warn about unused [tool.mypy] lines
follow_imports = "normal"          # Type check top level api code we use from imports
ignore_missing_imports = false     # prefer explicit ignores
disallow_untyped_defs = true       # All functions must have types
disallow_untyped_decorators = true # ... even decorators
disallow_incomplete_defs = true    # ... all types

[[tool.mypy.overrides]]
module = ["setuptools.*"]     # Add modules that give import errors here
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*"]                # pytest uses decorators which are not typed in 3.8
disallow_untyped_decorators = false # decorators in testing are not all annotated
endrequires::mypy>>
